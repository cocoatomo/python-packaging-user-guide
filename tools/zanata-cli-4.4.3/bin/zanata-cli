#!/bin/sh
# Copyright 2013-2015, Red Hat, Inc.
#
# This is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; either version 2.1 of the License, or (at your option)
# any later version.
#
# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this software; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF
# site: http://www.fsf.org.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`

# Reset the REPO variable. If you need to influence this use the environment setup file.
REPO=


# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
		   if [ -z "$JAVA_HOME" ]; then
		      if [ -x "/usr/libexec/java_home" ]; then
			      JAVA_HOME=`/usr/libexec/java_home`
			  else
			      JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
			  fi
           fi       
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/lib
fi

CLASSPATH="$BASEDIR"/etc:"$REPO"/args4j-2.32.jar:"$REPO"/commons-io-2.4.jar:"$REPO"/slf4j-api-1.7.22.jar:"$REPO"/slf4j-log4j12-1.7.22.jar:"$REPO"/log4j-1.2.17.jar:"$REPO"/zanata-client-commands-4.4.3.jar:"$REPO"/zanata-common-api-4.4.3.jar:"$REPO"/enunciate-core-annotations-2.9.1.jar:"$REPO"/hibernate-validator-5.2.3.Final.jar:"$REPO"/jboss-logging-3.3.0.Final.jar:"$REPO"/classmate-1.1.0.jar:"$REPO"/validation-api-1.1.0.Final.jar:"$REPO"/resteasy-multipart-provider-3.0.13.Final.jar:"$REPO"/resteasy-jaxrs-3.0.13.Final.jar:"$REPO"/httpclient-4.3.6.jar:"$REPO"/httpcore-4.3.3.jar:"$REPO"/mail-1.5.0-b01.jar:"$REPO"/activation-1.1.1.jar:"$REPO"/apache-mime4j-0.6.jar:"$REPO"/jackson-core-asl-1.9.13.jar:"$REPO"/jackson-mapper-asl-1.9.13.jar:"$REPO"/stax-api-1.0.jar:"$REPO"/jboss-jaxrs-api_2.0_spec-1.0.0.Final.jar:"$REPO"/zanata-adapter-properties-4.4.3.jar:"$REPO"/zanata-adapter-po-4.4.3.jar:"$REPO"/jgettext-0.15.jar:"$REPO"/antlr-2.7.7.jar:"$REPO"/zanata-adapter-xliff-4.4.3.jar:"$REPO"/txw2-2.2.11.jar:"$REPO"/zanata-rest-client-4.4.3.jar:"$REPO"/resteasy-client-3.0.13.Final.jar:"$REPO"/jboss-annotations-api_1.2_spec-1.0.0.Final.jar:"$REPO"/resteasy-jackson-provider-3.0.13.Final.jar:"$REPO"/resteasy-jaxb-provider-3.0.13.Final.jar:"$REPO"/jackson-jaxrs-1.9.13.jar:"$REPO"/jackson-xc-1.9.13.jar:"$REPO"/commons-beanutils-1.9.3.jar:"$REPO"/commons-collections-3.2.2.jar:"$REPO"/maven-artifact-3.0.4.jar:"$REPO"/plexus-utils-2.0.6.jar:"$REPO"/zanata-adapter-glossary-4.4.3.jar:"$REPO"/commons-configuration-1.10.jar:"$REPO"/commons-lang-2.6.jar:"$REPO"/openprops-0.7.1.jar:"$REPO"/joda-time-2.2.jar:"$REPO"/commons-lang3-3.3.2.jar:"$REPO"/commons-codec-1.10.jar:"$REPO"/jaxb-api-2.2.12.jar:"$REPO"/commons-csv-1.2.jar:"$REPO"/ant-1.8.2.jar:"$REPO"/ant-launcher-1.8.2.jar:"$REPO"/commons-exec-1.1.jar:"$REPO"/jansi-1.11.jar:"$REPO"/zanata-common-util-4.4.3.jar:"$REPO"/xom-1.2.10.jar:"$REPO"/xalan-2.7.0.jar:"$REPO"/guava-18.0.jar:"$REPO"/jcl-over-slf4j-1.7.22.jar:"$REPO"/zanata-cli-4.4.3.jar

ENDORSED_DIR=
if [ -n "$ENDORSED_DIR" ] ; then
  CLASSPATH=$BASEDIR/$ENDORSED_DIR/*:$CLASSPATH
fi

if [ -n "$CLASSPATH_PREFIX" ] ; then
  CLASSPATH=$CLASSPATH_PREFIX:$CLASSPATH
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS  \
  -classpath "$CLASSPATH" \
  -Dapp.name="zanata-cli" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  org.zanata.client.ZanataClient \
  "$@"
