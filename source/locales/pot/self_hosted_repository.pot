# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013â€“2017, PyPA
# This file is distributed under the same license as the Python Packaging User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Packaging User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-15 06:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../self_hosted_repository.rst:5
msgid "Hosting your Own Simple Repository"
msgstr ""

#: ../../self_hosted_repository.rst:0
msgid "Page Status"
msgstr ""

#: ../../self_hosted_repository.rst:7
msgid "Complete"
msgstr ""

#: ../../self_hosted_repository.rst:0
msgid "Last Reviewed"
msgstr ""

#: ../../self_hosted_repository.rst:8
msgid "2015-09-24"
msgstr ""

#: ../../self_hosted_repository.rst:11
msgid "If you wish to host your own simple repository [1]_, you can either use a software package like `devpi`_ or you can use simply create the proper directory structure and use any web server that can serve static files and generate an autoindex."
msgstr ""

#: ../../self_hosted_repository.rst:16
msgid "In either case, since you'll be hosting a repository that is likely not in your user's default repositories, you should instruct them in your project's description to configure their installer appropriately. For example with pip::"
msgstr ""

#: ../../self_hosted_repository.rst:22
msgid "In addition, it is **highly** recommended that you serve your repository with valid HTTPS. At this time, the security of your user's installations depends on all repositories using a valid HTTPS setup."
msgstr ""

#: ../../self_hosted_repository.rst:28
msgid "\"Manual\" Repository"
msgstr ""

#: ../../self_hosted_repository.rst:30
msgid "The directory layout is fairly simple, within a root directory you need to create a directory for each project. This directory should be the normalized name (as defined by PEP 503) of the project. Within each of these directories simply place each of the downloadable files. If you have the projects \"Foo\" (with the versions 1.0 and 2.0) and \"bar\" (with the version 0.1) You should end up with a structure that looks like::"
msgstr ""

#: ../../self_hosted_repository.rst:44
msgid "Once you have this layout, simply configure your webserver to serve the root directory with autoindex enabled. For an example using the built in Web server in `Twisted`_, you would simply run ``twistd -n web --path .`` and then instruct users to add the URL to their installer's configuration."
msgstr ""

#: ../../self_hosted_repository.rst:51
msgid "For complete documentation of the simple repository protocol, see PEP 503."
msgstr ""

